As a tentative step to thinking these ideas in some practical relation to computer music and software, I want to briefly consider Ableton Live, a DJ program much used by sound and interactive artists. The program, while quite capable of operating in a linear, highly structured manner, has also interactive potential – to be controlled by sensors registering a performer or larger environment or data stream via MIDI, or through programs such as Max or Isadora, and for events to follow a more flexible, topological process. Of course in conceiving of the software within a larger assemblage of an art event composed also of parts more readily able to operate provisionally – bodies, sensors and so on – we can to some extent ‘diffuse’ the pre-designed nature of software responses, but there is a need to address the potential for drift and disruption within the software itself, its ‘minor’ potentials - its capabilities to operate outside of its original design brief. I want to propose some tactics for thinking this conception of the program.